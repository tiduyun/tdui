@function empty($value) {
  @if not $value
    or $value == ""
    or $value == ()
    or length($value) == 0 {
    @return true;
  }

  @return false;
}

%clearfix {
  &::after {
    visibility: hidden;
    display: block;
    font-size: 0;
    content: " ";
    clear: both;
    height: 0;
  }
}

@mixin clearfix {
  @extend %clearfix;
}

@mixin scrollBar {
  &::-webkit-scrollbar-track-piece {
    background: #d3dce6;
  }

  &::-webkit-scrollbar {
    width: 6px;
  }

  &::-webkit-scrollbar-thumb {
    background: #99a9bf;
    border-radius: 20px;
  }
}

@mixin relative {
  position: relative;
  width: 100%;
  height: 100%;
}

@mixin pct($pct) {
  width: #{$pct};
  position: relative;
  margin: 0 auto;
}

@mixin triangle($width, $height, $color, $direction) {
  $width: $width/2;
  $color-border-style: $height solid $color;
  $transparent-border-style: $width solid transparent;

  height: 0;
  width: 0;

  @if $direction==up {
    border-bottom: $color-border-style;
    border-left: $transparent-border-style;
    border-right: $transparent-border-style;
  }

  @else if $direction==right {
    border-left: $color-border-style;
    border-top: $transparent-border-style;
    border-bottom: $transparent-border-style;
  }

  @else if $direction==down {
    border-top: $color-border-style;
    border-left: $transparent-border-style;
    border-right: $transparent-border-style;
  }

  @else if $direction==left {
    border-right: $color-border-style;
    border-top: $transparent-border-style;
    border-bottom: $transparent-border-style;
  }
}

@mixin size($width, $height: $width) {
  width: $width;
  height: $height;
}

@mixin link(
  $color,
  $color-hover: null,
  $color-focus: null
) {
  color: $color;

  &:hover {
    color: if($color-hover, $color-hover, mix($color-white, $color, $button-hover-tint-percent));
  }

  @if ($color-focus) {
    &:focus {
      color: $color-focus;
    }
  }
}

@mixin variant($selector) {
  @at-root #{$selector}#{&} {
    @content;
  }
}

@mixin color-hover($color, $color-hover: null) {
  color: $color;

  &:hover {
    color: if($color-hover, $color-hover, mix($color-white, $color, $button-hover-tint-percent));
  }
}

@function invert-color($color) {
  $r: red($color);
  $g: green($color);
  $b: blue($color);

  @if ($r*0.299 + $g*0.587 + $b*0.114 > 186) {
    @return $color-black;
  }

  @else {
    @return $color-white;
  }
}

// Helper for render abbreviations,
// eg. .mb2 => { margin-bottom: 0.5rem; } .mb3 => { margin-bottom: 1rem; } .mt2, .mr3 etc,.
@mixin render-abbr($prefix, $abbr: null, $attrs: ('top', 'right', 'bottom', 'left')) {
  @if (empty($abbr)) {
    $abbr: str-slice($prefix, 0, 1);
  }

  @each $k in $attrs {
    $cls: "#{$abbr}#{str-slice($k, 0, 1)}";
    $prefix: "margin";
    #{$cls}2 { #{$prefix}-#{$k}: 0.5rem; }
    #{$cls}3 { #{$prefix}-#{$k}: 1rem; }
  }
}

@mixin initial-css-variables() {
  :root {
    --color-black: #{$color-black};
    --color-white: #{$color-white};
  }

  [data-theme="dark"] {
    --color-black: #{$color-white};
    --color-white: #{$color-black};
  }
}
